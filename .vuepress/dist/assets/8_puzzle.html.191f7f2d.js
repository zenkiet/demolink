import{g as t,j as e,k as n,s as i,F as h,E as c,m as r}from"./vendor.bd533c15.js";const d={},o=c('<h1 id="tro-choi-8-puzzle" tabindex="-1"><a class="header-anchor" href="#tro-choi-8-puzzle" aria-hidden="true">#</a> <img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-14-55-43-icons8_big_puzzle_512px_1.png" alt="icons8_big_puzzle_512px_1.png" width="50"> Trò chơi 8-puzzle</h1><h2 id="_1-mo-ta-bai-toan" tabindex="-1"><a class="header-anchor" href="#_1-mo-ta-bai-toan" aria-hidden="true">#</a> 1. Mô tả bài toán</h2><p>Cho một bảng <code>3x3</code> gồm <code>8</code> ô cho sẵn số và <code>1</code> ô trống, sử dụng ô trống để di chuyên các ô có số (<em>lên/xuống/trái/phải</em>) để trùng khớp với mục tiêu mong muốn :</p><table><thead><tr><th>Trạng thái đầu</th><th>Trạng thái đích</th></tr></thead><tbody><tr><td><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-06-36-Screenshot 2021-05-16 150625.png" alt="Screenshot 2021-05-16 150625.png" width="161"></td><td><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-07-20-Screenshot 2021-05-16 150711.png" alt="Screenshot 2021-05-16 150711.png" width="159"></td></tr></tbody></table><ul><li><p>Sử dụng kiến thức xác xuất ta biết được trong bảng <code>3x3</code> có <code>9!</code> trường hợp có thể xảy ra ==&gt; <code>362880</code> cách sắp xếp một bài toán</p></li><li><p>Nhưng chỉ có <code>9!/2</code> bài toán có thể giải được ==&gt; <code>181440</code> trường hợp có thể giải được</p><blockquote><p>Chẳng hạn như, trường hợp sau đây chúng ta không thể giải được</p><p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-12-30-Screenshot 2021-05-16 151221.png" alt="Screenshot 2021-05-16 151221.png"></p></blockquote></li></ul><hr><h2 id="_2-giai-thuat-giai-quyet" tabindex="-1"><a class="header-anchor" href="#_2-giai-thuat-giai-quyet" aria-hidden="true">#</a> 2. Giải thuật giải quyết</h2><p>Có rất nhiều giải thuật tìm kiếm nhưng tôi chỉ hướng tới 3 giải thuật này :</p><ol><li><p><code>BFS</code> (<em>Tìm kiếm theo chiều rộng</em>)</p></li><li><p><code>DFS</code> (<em>Tìm kiếm theo chiều sâu</em>)</p></li><li><p><code>A* Algorithrm</code> (<em>Giải thuật A</em>*)</p></li></ol><table><thead><tr><th>Giải thuật</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-17-20-icons8_surface_512px.png" title="" alt="icons8_surface_512px.png" width="35"> BFS</th><th><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-18-31-icons8_depth_512px_1.png" alt="icons8_depth_512px_1.png" width="35"> DFS</th></tr></thead><tbody><tr><td>Cơ chế</td><td>FIFO (<em>hàng đợi</em>)</td><td>LIFO (<em>ngắn xếp</em>)</td></tr><tr><td>Thực hiện</td><td>Mở rộng các nút lần lượt từ nút <code>gốc</code></td><td>Phát triển sâu các trường hợp của một nhánh</td></tr><tr><td>Hạn chế</td><td>Làm cạn bộ nhớ<br>Tốn nhiều chi phí</td><td>Có thể rơi vào vòng lặp vĩnh cữu<br></td></tr><tr><td>Độ phức tạp</td><td><code>O(aᵇ)</code> <br><br><code>a</code> là độ sâu<br><code>b</code> là số phân nhánh</td><td><code>O(aᵇ)</code> <br><br><code>a</code> là độ sâu<br><code>b</code> là số phân nhánh</td></tr><tr><td>Mô hình</td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-47-42-bfs_gif.gif" alt="bfs_gif.gif"></td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-49-17-dfs_gif.gif" alt="dfs_gif.gif"></td></tr></tbody></table><p>Trước khi biết về giải thuật <code>A*</code> bạn phải nắm hiểu thế nào là tìm kiếm <code>Heuristic</code></p><p>Về cơ bản, có 2 loại kỹ thuật tìm kiếm :</p><ul><li><p><code>Uninformed Search</code> (<em>Tìm kiếm không có thông tin</em>)</p></li><li><p><code>Informed Search</code> (<em>Tìm kiếm có thông tin</em>)</p></li></ul><p>Như bạn đã biết thì các loại tìm kiếm như <code>Linear Search</code>, <code>Binary Search</code>, <code>BFS</code>, <code>DFS</code>... đó là những kỹ thuật <code>tìm kiếm không có thông tin</code></p><p>==&gt; Với kỹ thuật này chúng ta không hề biết <code>những gì chúng tìm kiếm</code> và <code>nơi chúng tìm kiếm</code>, vậy nên nó được gọi là <code>không có thông tin</code></p><p>==&gt; Tìm kiếm không có thông tin rất mất thời gian vì chúng không biết phải đi đâu và đâu là cơ hội tốt nhất để tìm thấy phần tử.</p><p>Ngược lại, kỹ thuật <code>tìm kiếm có thông tin</code> nhận thức được cơ hội tốt nhất để tìm thấy phần tử và thuật toán sẽ đi theo hướng đó và kỹ thuật đó tên là <code>Heuristic</code></p><p>==&gt; Vậy nên tìm kiếm <code>Heuristic</code> là một kỹ thuật tìm kiếm <strong>tối ưu</strong></p><h3 id="giai-thuat-a" tabindex="-1"><a class="header-anchor" href="#giai-thuat-a" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-19-51-icons8_flow_512px.png" title="" alt="icons8_flow_512px.png" width="35"> Giải thuật A*</h3><p>Hai phương pháp <code>BFS</code> và <code>DFS</code>, mặc dù có thể cho ra kết quả bài toán, tuy nhiên nó là dạng <code>Uninformed Search</code> nên sẽ rất mất nhiều <strong>thời gian</strong> và <strong>chi phí</strong>, để tối ưu nó ta sử dụng <code>giải thuật A*</code> xét đoạn đường đã đi qua, và bằng công thức sau sẽ chọn lối đi tối ưu nhất</p><div class="language-textile ext-textile line-numbers-mode"><pre class="language-textile"><code><span class="token phrase">f(n) = g(n) + h(n)\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><ul><li><p><code>g(n)</code> là chiều cao từ <code>trạng thái đang xét</code> tới <code>trạng thái đầu</code></p></li><li><p><code>h(n)</code> là hàm <code>heuristic</code> ước lượng chi phí <code>trạng thái đang xét</code> tới <code>trạng thái đích</code> (<em>hiểu đơn giản là số ô không đúng với <code>trạng thái đích</code></em>)</p></li><li><p><code>f(n)</code> càng thấp thì ưu tiên hướng đi đó</p></li></ul></blockquote><h4 id="mo-hinh-a" tabindex="-1"><a class="header-anchor" href="#mo-hinh-a" aria-hidden="true">#</a> Mô hình A*</h4><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-17-05-03-a_star.gif" title="" alt="a_star.gif" width="275"><hr><h2 id="_3-cai-đat-giai-thuat" tabindex="-1"><a class="header-anchor" href="#_3-cai-đat-giai-thuat" aria-hidden="true">#</a> 3. Cài đặt giải thuật</h2><p>Cho bảng <code>3x3</code> như sau, và từ <code>trạng thái đầu</code> hãy trình bày giải thuật di chuyển các bước sau cho thành <code>trạng thái đích </code></p><table><thead><tr><th>Trạng thái đầu</th><th>Trạng thái đích</th></tr></thead><tbody><tr><td><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-06-36-Screenshot 2021-05-16 150625.png" alt="Screenshot 2021-05-16 150625.png" width="161"></td><td><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-07-20-Screenshot 2021-05-16 150711.png" alt="Screenshot 2021-05-16 150711.png" width="159"></td></tr></tbody></table><h3 id="giai-thuat-bfs" tabindex="-1"><a class="header-anchor" href="#giai-thuat-bfs" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-17-20-icons8_surface_512px.png" title="" alt="icons8_surface_512px.png" width="35"> Giải thuật <code>BFS</code></h3><p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-17-12-15-Screenshot 2021-05-16 170812.png" alt="Screenshot 2021-05-16 170812.png"></p><h3 id="giai-thuat-a-1" tabindex="-1"><a class="header-anchor" href="#giai-thuat-a-1" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-15-19-51-icons8_flow_512px.png" title="" alt="icons8_flow_512px.png" width="35"> Giải thuật <code>A*</code></h3><p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-17-12-20-Screenshot 2021-05-16 170747.png" alt="Screenshot 2021-05-16 170747.png"></p>',32),a=r("==> Tham khảo tại "),g={href:"https://deniz.co/8-puzzle-solver/",target:"_blank",rel:"noopener noreferrer"},s=r("8-Puzzle Solver"),u=c('<hr><h2 id="_4-ket-luan" tabindex="-1"><a class="header-anchor" href="#_4-ket-luan" aria-hidden="true">#</a> 4. Kết luận</h2><table><thead><tr><th>Mẫu</th><th>Giải thuật</th><th>Thời gian</th><th>Độ sâu</th><th>Các nút xử lý</th><th>Các nút lưu trữ</th></tr></thead><tbody><tr><td>1 7 2<br>0 5 3<br>4 8 6</td><td>BFS<br>DFS<br>A*</td><td>0,033048<br>1,838068<br>0,009068</td><td>11<br>62391<br>11</td><td>1694<br>108647<br>54</td><td>663<br>43919<br>25</td></tr><tr><td>0 1 2<br>4 6 5<br>7 8 3</td><td>BFS<br>DFS<br>A*</td><td>0,008418<br>0,847719<br>0,009151</td><td>12<br>35134<br>12</td><td>55<br>61731<br>85</td><td>26<br>25637<br>36</td></tr><tr><td>2 1 5<br>0 3 6<br>4 7 8</td><td>BFS<br>DFS<br>A*</td><td>0,073225<br>2,290027<br>0,009567</td><td>13<br>81119<br>13</td><td>5234<br>140716<br>75</td><td>1992<br>55453<br>36</td></tr><tr><td>1 7 2<br>4 5 3<br>8 6 0</td><td>BFS<br>DFS<br>A*</td><td>0,083424<br>2,493681<br>0,011888</td><td>14<br>88982<br>14</td><td>5789<br>154404<br>148</td><td>2322<br>60065<br>64</td></tr><tr><td>2 5 8<br>4 0 3<br>7 1 6</td><td>BFS<br>DFS<br>A*</td><td>0,342634<br>0,450451<br>0,014885</td><td>16<br>19522<br>16</td><td>24641<br>34426<br>243</td><td>8834<br>14441<br>102</td></tr></tbody></table><p>==&gt; Lập bảng so sánh :</p><table><thead><tr><th></th><th>Thời gian</th><th>Độ sâu</th><th>Các nút xử lý</th><th>Các nút lưu trữ</th></tr></thead><tbody><tr><td>So sánh</td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-18-02-36-2021-05-16-18-01-07-image.png" title="" alt="2021-05-16-18-01-07-image.png" width="397"></td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-18-02-45-2021-05-16-18-01-18-image.png" title="" alt="2021-05-16-18-01-18-image.png" width="421"></td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-18-02-49-2021-05-16-18-01-25-image.png" title="" alt="2021-05-16-18-01-25-image.png" width="366"></td><td><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/05/16-18-02-54-2021-05-16-18-01-31-image.png" title="" alt="2021-05-16-18-01-31-image.png" width="421"></td></tr><tr><td>Kết luận</td><td>A* tối ưu</td><td>BFS và A* tối ưu</td><td>A* tối ưu</td><td>A* tối ưu</td></tr></tbody></table><p>==&gt; Giải thuật <code>A*</code> tối ưu nhất trong việc giải <code>8-puzzle</code></p>',6);d.render=function(c,r){const d=t("OutboundLink");return e(),n(h,null,[o,i("blockquote",null,[i("p",null,[a,i("a",g,[s,i(d)])])]),u],64)};export{d as default};
